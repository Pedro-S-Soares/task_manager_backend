services:
  db:
    image: postgres:16
    container_name: postgres_app
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: elixir_app
    command: sh -c "mix ecto.create && mix ecto.migrate && mix phx.server"
    ports:
      - 4000:4000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_net
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      DATABASE_HOST: db
      MIX_ENV: dev
    volumes:
      - .:/app
    working_dir: /app

volumes:
  postgres_data:

networks:
  backend_net: